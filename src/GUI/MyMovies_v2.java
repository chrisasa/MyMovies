/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import support.tools.ImportData;
import support.tools.Exist;
import support.tools.Var;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author christos
 */
public class MyMovies_v2 extends javax.swing.JFrame {

    TableModel model;
    TableRowSorter<TableModel> sorter;
    int selectedRadioButtonIndex;
    int selectedItemID;

    /**
     * Creates new form MyMovies_v2
     */
    public MyMovies_v2() {
        initComponents();

        initDataFromFile();

        setFrameAtCenter();

        initView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        moviesTable = new javax.swing.JTable();
        details_Panel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        firstRow_searchPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        secondRow_searchPanel = new javax.swing.JPanel();
        titleRadioButton = new javax.swing.JRadioButton();
        yearRadioButton = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        File_Menu = new javax.swing.JMenu();
        exit_FileMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        buttonGroup.add(titleRadioButton);
        buttonGroup.add(yearRadioButton);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout());

        moviesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Α/Α", "Τίτλος", "Έτος"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        moviesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moviesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moviesTable);
        moviesTable.getColumnModel().getColumn(0).setMinWidth(35);
        moviesTable.getColumnModel().getColumn(0).setPreferredWidth(40);
        moviesTable.getColumnModel().getColumn(0).setMaxWidth(45);

        jPanel1.add(jScrollPane1);

        jPanel2.setLayout(new java.awt.GridLayout(5, 2));

        jLabel1.setText("jLabel1");
        jPanel2.add(jLabel1);

        jTextField1.setText("jTextField1");
        jPanel2.add(jTextField1);

        jLabel2.setText("jLabel2");
        jPanel2.add(jLabel2);

        jTextField2.setText("jTextField2");
        jPanel2.add(jTextField2);

        jLabel3.setText("jLabel3");
        jPanel2.add(jLabel3);

        jTextField3.setText("jTextField3");
        jPanel2.add(jTextField3);

        jLabel4.setText("jLabel4");
        jPanel2.add(jLabel4);

        jTextField4.setText("jTextField4");
        jPanel2.add(jTextField4);

        jLabel5.setText("jLabel5");
        jPanel2.add(jLabel5);

        jTextField5.setText("jTextField5");
        jPanel2.add(jTextField5);

        org.jdesktop.layout.GroupLayout details_PanelLayout = new org.jdesktop.layout.GroupLayout(details_Panel);
        details_Panel.setLayout(details_PanelLayout);
        details_PanelLayout.setHorizontalGroup(
            details_PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(details_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(78, 78, 78)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );
        details_PanelLayout.setVerticalGroup(
            details_PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(details_PanelLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(details_PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jPanel1.add(details_Panel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        searchPanel.setLayout(new java.awt.GridLayout(2, 0));

        firstRow_searchPanel.setLayout(new javax.swing.BoxLayout(firstRow_searchPanel, javax.swing.BoxLayout.LINE_AXIS));

        searchLabel.setText("Αναζήτηση:");
        firstRow_searchPanel.add(searchLabel);
        firstRow_searchPanel.add(searchTextField);

        searchPanel.add(firstRow_searchPanel);

        secondRow_searchPanel.setLayout(new javax.swing.BoxLayout(secondRow_searchPanel, javax.swing.BoxLayout.LINE_AXIS));

        titleRadioButton.setSelected(true);
        titleRadioButton.setText("Τίτλος");
        titleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleRadioButtonActionPerformed(evt);
            }
        });
        secondRow_searchPanel.add(titleRadioButton);

        yearRadioButton.setText("Έτος");
        yearRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearRadioButtonActionPerformed(evt);
            }
        });
        secondRow_searchPanel.add(yearRadioButton);

        searchPanel.add(secondRow_searchPanel);

        getContentPane().add(searchPanel, java.awt.BorderLayout.SOUTH);

        File_Menu.setText("Αρχείο");

        exit_FileMenuItem.setText("Έξοδος");
        exit_FileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_FileMenuItemActionPerformed(evt);
            }
        });
        File_Menu.add(exit_FileMenuItem);

        jMenuBar1.add(File_Menu);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void titleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleRadioButtonActionPerformed
        // TODO add your handling code here:
        selectedRadioButtonIndex = 1;
        newFilter(selectedRadioButtonIndex);
    }//GEN-LAST:event_titleRadioButtonActionPerformed

    private void yearRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearRadioButtonActionPerformed
        // TODO add your handling code here:
        selectedRadioButtonIndex = 2;
        newFilter(selectedRadioButtonIndex);
    }//GEN-LAST:event_yearRadioButtonActionPerformed

    private void moviesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moviesTableMouseClicked
        // TODO add your handling code here:
        int[] selRows = moviesTable.getSelectedRows();
        int j = selRows[0];
        int i = Integer.parseInt(moviesTable.getValueAt(j, 0).toString());

        String title = Exist.executeGetQuery("//movie[@id='" + i + "']/title", Var.MoviesDataXML).item(0).getTextContent().trim();
        String year = Exist.executeGetQuery("//movie[@id='" + i + "']/year", Var.MoviesDataXML).item(0).getTextContent().trim();
        String genre = Exist.executeGetQuery("//movie[@id='" + i + "']/genre", Var.MoviesDataXML).item(0).getTextContent().trim();
        String writer = Exist.executeGetQuery("//movie[@id='" + i + "']/writer", Var.MoviesDataXML).item(0).getTextContent().trim();
        String actors = Exist.executeGetQuery("//movie[@id='" + i + "']/actors", Var.MoviesDataXML).item(0).getTextContent().trim();
        String plot = Exist.executeGetQuery("//movie[@id='" + i + "']/plot", Var.MoviesDataXML).item(0).getTextContent().trim();
        String runtime = Exist.executeGetQuery("//movie[@id='" + i + "']/runtime", Var.MoviesDataXML).item(0).getTextContent().trim();
        String rating = Exist.executeGetQuery("//movie[@id='" + i + "']/rating", Var.MoviesDataXML).item(0).getTextContent().trim();

        System.out.println(title);
        System.out.println(year);
        System.out.println(genre);
        System.out.println(writer);
        System.out.println(actors);
        System.out.println(plot);
        System.out.println(runtime);
        System.out.println(rating);
        System.out.println(new File(Var.MoviesImages + File.separator + title + year + ".jpg").exists());
    }//GEN-LAST:event_moviesTableMouseClicked

    private void exit_FileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_FileMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit_FileMenuItemActionPerformed

    /**
     *
     */
    private void initDataFromFile() {
        ImportData.createTittleYearLists();
        ImportData.getMoviesImages();
    }

    /**
     * Set the main frame at the center of monitor
     */
    public void setFrameAtCenter() {
        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        // Move the window
        this.setLocation(x, y);
    }

    /**
     * Init view of table, and create sorter for search
     */
    private void initView() {
        displayDataInTable();

        // Enable sorting
        moviesTable.setAutoCreateRowSorter(true);
        moviesTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        // Create sorter for the search
        model = moviesTable.getModel();
        sorter = new TableRowSorter<TableModel>(model);
        moviesTable.setRowSorter(sorter);

        radioButtonSelected();

        //Whenever filterText changes, invoke newFilter.
        searchTextField.getDocument().addDocumentListener(
                new DocumentListener() {
                    public void changedUpdate(DocumentEvent e) {
                        radioButtonSelected();
                        newFilter(selectedRadioButtonIndex);
                    }

                    public void insertUpdate(DocumentEvent e) {
                        radioButtonSelected();
                        newFilter(selectedRadioButtonIndex);
                    }

                    public void removeUpdate(DocumentEvent e) {
                        radioButtonSelected();
                        newFilter(selectedRadioButtonIndex);
                    }
                });

    }

    /**
     * Display data into table
     */
    private void displayDataInTable() {
        DefaultTableModel model = (DefaultTableModel) moviesTable.getModel();

        int counter = new Integer(Exist.executeGetQuery("/myMovies/moviesCounter", Var.MoviesDataXML).item(0).getTextContent().trim());

        for (int i = 1; i <= counter; i++) {
            String title = Exist.executeGetQuery("//movie[@id='" + i + "']/title", Var.MoviesDataXML).item(0).getTextContent().trim();
            String year = Exist.executeGetQuery("//movie[@id='" + i + "']/year", Var.MoviesDataXML).item(0).getTextContent().trim();
            String uniqueID = Exist.executeGetQuery("//movie[@id='" + i + "']/uniqueID", Var.MoviesDataXML).item(0).getTextContent().trim();

            // Create object with data
            Object[] row = new Object[]{uniqueID, title, year};

            // Instert row in the table
            model.addRow(row);
        }

    }

    /**
     * Get index of selected radio button
     */
    private void radioButtonSelected() {

        if (titleRadioButton.isSelected()) {
            selectedRadioButtonIndex = 1;
        } else {
            selectedRadioButtonIndex = 2;
        }
    }

    /**
     * Update the row filter regular expression from the expression in the text
     * box.
     */
    private void newFilter(int selectedType) {
//        System.out.println("test");
        RowFilter<TableModel, Object> rf = null;
//        //If current expression doesn't parse, don't update.
        try {
            // The int at the end is the column id
            rf = RowFilter.regexFilter(searchTextField.getText(), selectedType);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }

        sorter.setRowFilter(rf);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyMovies_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyMovies_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyMovies_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyMovies_v2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyMovies_v2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu File_Menu;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JPanel details_Panel;
    private javax.swing.JMenuItem exit_FileMenuItem;
    private javax.swing.JPanel firstRow_searchPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable moviesTable;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel secondRow_searchPanel;
    private javax.swing.JRadioButton titleRadioButton;
    private javax.swing.JRadioButton yearRadioButton;
    // End of variables declaration//GEN-END:variables
}
